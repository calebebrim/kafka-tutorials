version: '3.8'

networks:
  kafka_network:  # Define the custom network
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - kafka_network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://schema-registry:8081/subjects"]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - kafka_network

  protobuf-registry:
    build: 
      dockerfile: ./proto_schema_registry/docker/dockerfile.buff-server
      context: ./projects
    ports:
      - "8000:8000"
    volumes:
      - ./schemas:/schemas
    restart: always
    networks:
      - kafka_network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  
  avro-producer:
    image: avro-producer
    build:
      dockerfile: avro_producer/docker/dockerfile.avro_producer
      context: ./projects
    environment:
      KAFKA_BROKERS: kafka:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      TOPIC: bronze
    depends_on:
      schema-registry:
        condition: service_healthy
    restart: always
    ports:
      - "5000:5000"
    networks:
      - kafka_network
